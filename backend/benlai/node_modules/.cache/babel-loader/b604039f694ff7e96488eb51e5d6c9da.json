{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\xhl\\\\0.1012\\\\cangku\\\\backend\\\\benlai\\\\src\\\\page\\\\login.js\";\nimport React from 'react'; // let a = function (props) {\n//     const layout = {\n//         labelCol: { span: 6 },\n//         wrapperCol: { span: 16 },\n//     };\n//     const tailLayout = {\n//         wrapperCol: { offset: 6, span: 16 },\n//     };\n//     const rules = {\n//         username: [\n//             { required: true, message: '用户名不能为空' },\n//         ],\n//         password: [\n//             { required: true, message: '密码不能为空' },\n//             { min: 6, max: 12, message: '密码长度为6到12位' }\n//         ]\n//     }\n// const onFinish = async (values) => {\n//     console.log(values);\n//     values.password = SHA256(values.password).toString()\n//     //登录\n//     const { data } = await request.get('/user/login', {\n//         params: values\n//     })\n//     console.log(data);\n//     if (data.status === 200) {\n//         message.success('登录成功')\n//         //把用户信息存入redux\n//         // const action = { type: 'login', user: data.data }\n//         // store.dispatch(action)\n//         // console.log('newstate=', store.getState());\n//         // const actions = { type: 'update_user', user: { phone: 13888888888, password: 123456 } }\n//         // store.dispatch(actions)\n//         // console.log('actions=', store.getState());\n//         // props.dispatch({ type: 'login', user: data.data })\n//         console.log('loginprops=', props);\n//         // props.login(data.data)\n//         //redux-saga\n//         props.dispatch({ type: 'login_async', data: values })\n//         //获取到高阶组件传过来的组件名称（通过props.location.search 提取）\n//         console.log('login-props', props.location.search);//?targeturl=add\n//         const pathname = props.location.search.match(/targeturl\\=([\\/\\w\\-]+)/);\n//         console.log(pathname);\n//         let paths;\n//         if (pathname) {\n//             paths = pathname[1]\n//         }\n//         //下次免登录 把数据存到本地浏览器\n//         // if (values.remember) {\n//         //     // console.log(data);\n//         //     localStorage.setItem('user', JSON.stringify(data.data))\n//         // } else {\n//         //     sessionStorage.setItem('user', JSON.stringify(data.data))\n//         // }\n//         props.history.push(paths || '/mine')\n//         console.log(pathname[1]);\n//     } else {\n//         message.error('登录失败')\n//     }\n// }\n\nfunction Login() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["E:/xhl/0.1012/cangku/backend/benlai/src/page/login.js"],"names":["React","Login"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AACA,SAASC,KAAT,GAAiB;AACb,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;KANQA,K;AAQT,eAAeA,KAAf","sourcesContent":["import React from 'react'\r\n\r\n\r\n// let a = function (props) {\r\n//     const layout = {\r\n//         labelCol: { span: 6 },\r\n//         wrapperCol: { span: 16 },\r\n//     };\r\n//     const tailLayout = {\r\n//         wrapperCol: { offset: 6, span: 16 },\r\n//     };\r\n//     const rules = {\r\n//         username: [\r\n//             { required: true, message: '用户名不能为空' },\r\n//         ],\r\n//         password: [\r\n//             { required: true, message: '密码不能为空' },\r\n//             { min: 6, max: 12, message: '密码长度为6到12位' }\r\n\r\n//         ]\r\n//     }\r\n// const onFinish = async (values) => {\r\n//     console.log(values);\r\n//     values.password = SHA256(values.password).toString()\r\n//     //登录\r\n//     const { data } = await request.get('/user/login', {\r\n//         params: values\r\n//     })\r\n//     console.log(data);\r\n//     if (data.status === 200) {\r\n//         message.success('登录成功')\r\n\r\n//         //把用户信息存入redux\r\n//         // const action = { type: 'login', user: data.data }\r\n//         // store.dispatch(action)\r\n//         // console.log('newstate=', store.getState());\r\n//         // const actions = { type: 'update_user', user: { phone: 13888888888, password: 123456 } }\r\n//         // store.dispatch(actions)\r\n//         // console.log('actions=', store.getState());\r\n\r\n//         // props.dispatch({ type: 'login', user: data.data })\r\n\r\n\r\n//         console.log('loginprops=', props);\r\n//         // props.login(data.data)\r\n//         //redux-saga\r\n//         props.dispatch({ type: 'login_async', data: values })\r\n//         //获取到高阶组件传过来的组件名称（通过props.location.search 提取）\r\n//         console.log('login-props', props.location.search);//?targeturl=add\r\n//         const pathname = props.location.search.match(/targeturl\\=([\\/\\w\\-]+)/);\r\n//         console.log(pathname);\r\n//         let paths;\r\n//         if (pathname) {\r\n//             paths = pathname[1]\r\n//         }\r\n//         //下次免登录 把数据存到本地浏览器\r\n//         // if (values.remember) {\r\n//         //     // console.log(data);\r\n//         //     localStorage.setItem('user', JSON.stringify(data.data))\r\n//         // } else {\r\n//         //     sessionStorage.setItem('user', JSON.stringify(data.data))\r\n//         // }\r\n//         props.history.push(paths || '/mine')\r\n//         console.log(pathname[1]);\r\n\r\n//     } else {\r\n//         message.error('登录失败')\r\n//     }\r\n\r\n// }\r\nfunction Login() {\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n"]},"metadata":{},"sourceType":"module"}
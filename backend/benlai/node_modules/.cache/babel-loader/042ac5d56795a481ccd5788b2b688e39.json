{"ast":null,"code":"import { createStore } from 'redux';\nconst initState = {\n  goodslist: [{\n    id: 1,\n    name: 'xxx',\n    price: 998,\n    qty: 2\n  }],\n  totalprice: 0\n};\n\nconst reducer = function (state = initState, action) {\n  let goodslist, totalprice;\n\n  switch (action.type) {\n    case 'add_to_cart':\n      goodslist = [action.goods, ...state.goodslist], totalprice = goodslist.reduce((prev, item) => prev + item.price * item.qty, 0);\n      return {\n        goodslist,\n        totalprice\n      };\n\n    case 'remove_from_cart':\n      goodslist = state.goodslist.filter(item => item.id != action.id);\n      totalprice = goodslist.reduce((prev, item) => prev + item.price * item.qty, 0);\n      return {\n        goodslist,\n        totalprice\n      };\n\n    default:\n      return state;\n  } // return state\n\n};\n\nconst store = createStore(reducer);\nexport default store;","map":{"version":3,"sources":["E:/xhl/0.1012/cangku/backend/benlai/src/redux/index.js"],"names":["createStore","initState","goodslist","id","name","price","qty","totalprice","reducer","state","action","type","goods","reduce","prev","item","filter","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,SAAS,EAAE,CAAC;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,KAAf;AAAsBC,IAAAA,KAAK,EAAE,GAA7B;AAAkCC,IAAAA,GAAG,EAAE;AAAvC,GAAD,CADG;AAEdC,EAAAA,UAAU,EAAE;AAFE,CAAlB;;AAKA,MAAMC,OAAO,GAAG,UAAUC,KAAK,GAAGR,SAAlB,EAA6BS,MAA7B,EAAqC;AACjD,MAAIR,SAAJ,EAAeK,UAAf;;AACA,UAAQG,MAAM,CAACC,IAAf;AACI,SAAK,aAAL;AACIT,MAAAA,SAAS,GAAG,CAACQ,MAAM,CAACE,KAAR,EAAe,GAAGH,KAAK,CAACP,SAAxB,CAAZ,EACIK,UAAU,GAAGL,SAAS,CAACW,MAAV,CAAiB,CAACC,IAAD,EAAOC,IAAP,KAAgBD,IAAI,GAAGC,IAAI,CAACV,KAAL,GAAaU,IAAI,CAACT,GAA1D,EAA+D,CAA/D,CADjB;AAEA,aAAO;AACHJ,QAAAA,SADG;AAEHK,QAAAA;AAFG,OAAP;;AAIJ,SAAK,kBAAL;AACIL,MAAAA,SAAS,GAAGO,KAAK,CAACP,SAAN,CAAgBc,MAAhB,CAAuBD,IAAI,IAAIA,IAAI,CAACZ,EAAL,IAAWO,MAAM,CAACP,EAAjD,CAAZ;AACAI,MAAAA,UAAU,GAAGL,SAAS,CAACW,MAAV,CAAiB,CAACC,IAAD,EAAOC,IAAP,KAAgBD,IAAI,GAAGC,IAAI,CAACV,KAAL,GAAaU,IAAI,CAACT,GAA1D,EAA+D,CAA/D,CAAb;AACA,aAAO;AACHJ,QAAAA,SADG;AAEHK,QAAAA;AAFG,OAAP;;AAIJ;AACI,aAAOE,KAAP;AAhBR,GAFiD,CAqBjD;;AACH,CAtBD;;AAyBA,MAAMQ,KAAK,GAAGjB,WAAW,CAACQ,OAAD,CAAzB;AAGA,eAAeS,KAAf","sourcesContent":["import { createStore } from 'redux'\r\n\r\nconst initState = {\r\n    goodslist: [{ id: 1, name: 'xxx', price: 998, qty: 2 }],\r\n    totalprice: 0\r\n}\r\n\r\nconst reducer = function (state = initState, action) {\r\n    let goodslist, totalprice;\r\n    switch (action.type) {\r\n        case 'add_to_cart':\r\n            goodslist = [action.goods, ...state.goodslist],\r\n                totalprice = goodslist.reduce((prev, item) => prev + item.price * item.qty, 0)\r\n            return {\r\n                goodslist,\r\n                totalprice\r\n            }\r\n        case 'remove_from_cart':\r\n            goodslist = state.goodslist.filter(item => item.id != action.id)\r\n            totalprice = goodslist.reduce((prev, item) => prev + item.price * item.qty, 0)\r\n            return {\r\n                goodslist,\r\n                totalprice\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n    // return state\r\n}\r\n\r\n\r\nconst store = createStore(reducer)\r\n\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}
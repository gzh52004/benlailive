{"ast":null,"code":"import { createStore } from 'redux';\nconst initState = {\n  goodslist: [{\n    productSysNo: null,\n    productName: '',\n    price: null\n  }]\n};\n\nconst reducer = function (state = initState, action) {\n  switch (action.type) {\n    case 'add_to_goods':\n      console.log(action.goods);\n      return {\n        goodslist: [action.goods, ...state.goodslist]\n      };\n\n    case 'remove_from_cart':\n      goodslist = state.goodslist.filter(item => item.id != action.id);\n      totalprice = goodslist.reduce((prev, item) => prev + item.price * item.qty, 0);\n      return {\n        goodslist,\n        totalprice\n      };\n\n    default:\n      return state;\n  } // return state\n\n};\n\nconst store = createStore(reducer);\nexport default store;","map":{"version":3,"sources":["E:/xhl/0.1012/cangku/backend/benlai/src/redux/index.js"],"names":["createStore","initState","goodslist","productSysNo","productName","price","reducer","state","action","type","console","log","goods","filter","item","id","totalprice","reduce","prev","qty","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,SAAS,EAAE,CAAC;AAAEC,IAAAA,YAAY,EAAE,IAAhB;AAAsBC,IAAAA,WAAW,EAAE,EAAnC;AAAuCC,IAAAA,KAAK,EAAE;AAA9C,GAAD;AADG,CAAlB;;AAIA,MAAMC,OAAO,GAAG,UAAUC,KAAK,GAAGN,SAAlB,EAA6BO,MAA7B,EAAqC;AACjD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,cAAL;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,KAAnB;AACA,aAAO;AACHV,QAAAA,SAAS,EAAE,CAACM,MAAM,CAACI,KAAR,EAAe,GAAGL,KAAK,CAACL,SAAxB;AADR,OAAP;;AAGJ,SAAK,kBAAL;AACIA,MAAAA,SAAS,GAAGK,KAAK,CAACL,SAAN,CAAgBW,MAAhB,CAAuBC,IAAI,IAAIA,IAAI,CAACC,EAAL,IAAWP,MAAM,CAACO,EAAjD,CAAZ;AACAC,MAAAA,UAAU,GAAGd,SAAS,CAACe,MAAV,CAAiB,CAACC,IAAD,EAAOJ,IAAP,KAAgBI,IAAI,GAAGJ,IAAI,CAACT,KAAL,GAAaS,IAAI,CAACK,GAA1D,EAA+D,CAA/D,CAAb;AACA,aAAO;AACHjB,QAAAA,SADG;AAEHc,QAAAA;AAFG,OAAP;;AAIJ;AACI,aAAOT,KAAP;AAdR,GADiD,CAkBjD;;AACH,CAnBD;;AAsBA,MAAMa,KAAK,GAAGpB,WAAW,CAACM,OAAD,CAAzB;AAGA,eAAec,KAAf","sourcesContent":["import { createStore } from 'redux'\r\n\r\nconst initState = {\r\n    goodslist: [{ productSysNo: null, productName: '', price: null }]\r\n}\r\n\r\nconst reducer = function (state = initState, action) {\r\n    switch (action.type) {\r\n        case 'add_to_goods':\r\n            console.log(action.goods);\r\n            return {\r\n                goodslist: [action.goods, ...state.goodslist]\r\n            }\r\n        case 'remove_from_cart':\r\n            goodslist = state.goodslist.filter(item => item.id != action.id)\r\n            totalprice = goodslist.reduce((prev, item) => prev + item.price * item.qty, 0)\r\n            return {\r\n                goodslist,\r\n                totalprice\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n    // return state\r\n}\r\n\r\n\r\nconst store = createStore(reducer)\r\n\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}
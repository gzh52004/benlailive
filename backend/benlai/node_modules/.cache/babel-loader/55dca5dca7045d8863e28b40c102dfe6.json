{"ast":null,"code":"// import { createStore } from 'redux'\n// const initState = {\n//     goodslist: [{ id: 1, name: 'xxx', price: 998, qty: 2 }],\n//     totalprice: 0\n// }\n// const reducer = function (state = initState, action) {\n//     let goodslist, totalprice;\n//     switch (action.type) {\n//         case 'add_to_cart':\n//             goodslist = [action.goods, ...state.goodslist],\n//                 totalprice = goodslist.reduce((prev, item) => prev + item.price * item.qty, 0)\n//             return {\n//                 goodslist,\n//                 totalprice\n//             }\n//         case 'remove_from_cart':\n//             goodslist = state.goodslist.filter(item => item.id != action.id)\n//             totalprice = goodslist.reduce((prev, item) => prev + item.price * item.qty, 0)\n//             return {\n//                 goodslist,\n//                 totalprice\n//             }\n//         default:\n//             return state\n//     }\n//     // return state\n// }\n// const store = createStore(reducer)\n// export default store","map":{"version":3,"sources":["E:/xhl/0.1012/cangku/backend/benlai/src/redux/index.js"],"names":[],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAGA","sourcesContent":["// import { createStore } from 'redux'\r\n\r\n// const initState = {\r\n//     goodslist: [{ id: 1, name: 'xxx', price: 998, qty: 2 }],\r\n//     totalprice: 0\r\n// }\r\n\r\n// const reducer = function (state = initState, action) {\r\n//     let goodslist, totalprice;\r\n//     switch (action.type) {\r\n//         case 'add_to_cart':\r\n//             goodslist = [action.goods, ...state.goodslist],\r\n//                 totalprice = goodslist.reduce((prev, item) => prev + item.price * item.qty, 0)\r\n//             return {\r\n//                 goodslist,\r\n//                 totalprice\r\n//             }\r\n//         case 'remove_from_cart':\r\n//             goodslist = state.goodslist.filter(item => item.id != action.id)\r\n//             totalprice = goodslist.reduce((prev, item) => prev + item.price * item.qty, 0)\r\n//             return {\r\n//                 goodslist,\r\n//                 totalprice\r\n//             }\r\n//         default:\r\n//             return state\r\n//     }\r\n\r\n//     // return state\r\n// }\r\n\r\n\r\n// const store = createStore(reducer)\r\n\r\n\r\n// export default store"]},"metadata":{},"sourceType":"module"}